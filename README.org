* Quicksort in x86
  This project is a x86 implementation of the [[https://en.wikipedia.org/wiki/Quicksort][Quicksort]].

* Instructions
** Converting quickSort.asm into executable quickSort.o
#+BEGIN_SRC shell
nasm -f elf32 quickSort.asm -o quickSort.o
#+END_SRC

** Using gcc to compile the object file into binary
#+BEGIN_SRC shell
gcc -m32 -fno-pic quickSort.o -o quickSort
#+END_SRC

** Runing quickSort (up to 1000 integers as parameters are allowed):
#+BEGIN_SRC shell
./quickSort -98 55 66 -24 74 65 0 99
#+END_SRC

** Or using the auto_test.sh bash script to do all the things in one step:
#+BEGIN_SRC shell
./auto_test.sh
#+END_SRC

** Degugging:
#+BEGIN_SRC shell
gdb quickSort
#+END_SRC

* Credit
  The code is based on a [[https://stackoverflow.com/questions/32916387/optmization-for-quicksort-in-x86-32-bit-assembly][question]] on stackoverflow, asked by pushebp and answered by davmac.
  Woolo implements the additional functions, which includes:
  1. Accepting numbers as arguments from command line.
  2. Being able to sort negative numbers as well.
